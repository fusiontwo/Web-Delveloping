<Controller 클래스 안에 있는 메서드별 중요한 포인트 정리>


printData : 이름과 비밀번호 출력

addStudentEx : stdCnt가 0일 때 객체 생성하고 
0보다 클 때 temp 사용해서 기존 데이터 복사후,
새로운 데이터(parameter로 받은 것) 추가

removeStudentEx : stdCnt가 1일 때 list를 null로 비워버리고,
1보다 클 때 temp 사용해서 특정 인덱스 이전의 객체들과
특정 인덱스 이후의 객체들을 각각 복사해 넣기, stdCnt 감소시켜기

checkId : 디폴트로 check에 -1을 넣어놓음. 입력받은 ID와 list에 있는 ID 중 일치하는 게 있는지 
반복문으로 확인함. 일치하는 게 있으면 check에 인덱스 값을 넣음.
check 값 return해서 활용. (-1 or other number)

printStudentEx : list에 있는 모든 사용자 정보를 printData 메서드
이용해서 출력함.

outData : 텍스트 파일에 write할 데이터를 만드는 메서드.
data 변수의 디폴트는 빈 문자열임. stdCnt가 0이면 그대로 data리턴.
stdCnt가 0보다 크면 data에 stdCnt를 추가하고 줄바꿈, 
id와 pw 정보를 추가하며 줄바꿈. data return 
(return 문이 2번 나오는 게 특징)

sortData : 이중 for문을 이용해서 list에 있는 id를 사전식으로 정렬.
값을 반환하는 compareTo() 사용, temp 사용이 특징임.

loadStudentEx : Controller 클래스의 필드에 선언된 list와 stdCnt값
을 변경함. temp 배열과 count를  parameter로 받아서 
위의 필드값을 변경함.

 <main 메서드 안의 sel 값별 실행문 중요 포인트 정리>


sel == 1 일 때 : StudentEx 인스턴스(참조변수 : temp)를 만들고 
temp.id에 값 입력받기. checkId로 해당 id가 이미 존재하는지 확인. 
checkId가 반환한 값이 -1이면 pw 입력받아 temp.pw에 넣고,
addStudentEx 메서드에 temp를 인자로 전달함.
checkId가 반환한 값이 -1이 아니면 중복 아이디라고 출력.

sel == 2 일 때 : printStudentEx 메서드로 전체 학생 id와 pw를 출력.
StudentEx 인스턴스(참조변수 : temp)를 만들고 temp.id에 값 입력받기.
checkId 메서드로 id가 존재하는지 체크. 
chekId가 반환한 값이 -1이면 없는 아이디라고 출력,
반환한 값이 -1 이외의 값이면 removeStudentEx로 제거하고
탈퇴 메세지 출력.

sel == 3 일 때 : sortData메서드, printStudentEx메서드 호출.

sel == 4 일 때 : printStudentEx메서드 호출.

sel == 5 일 때 : FileWriter 사용. data 변수 생성하여
outData 메서드가 리턴한 값을 대입. data가 빈 문자열이 아니면
파일에 write하기. 예외 처리, 파일 닫기에 주의.

sel == 6 일 때 : FileReader로 파일 읽기. 
BufferedReader로 한 줄 씩 읽기. 첫째 줄은 전체 회원 수이므로
readLine()으로 한 줄 미리 읽어주기. 이 때 Integer.parseInt를 이용해
count 변수에 전체 회원 수를 추출해서 대입. 
전체 회원 수만큼 studentEx 타입의 배열을 생성해서 temp에 대입.
temp의 배열에 StudentEx 객체를 생성함. 
line을 한 줄씩 읽고 가공해서 id, pw에 저장

loadStudentEx 메서드 호출 (temp와 count를 parameter로 전달)
printStudentEx 메서드 호출해서 모든 회원 정보를 출력.
예외 처리와 close 주의.

sel == 7 일 때 : 종료


< 출력 예시 >
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
1
[가입] id 를 입력하세요 >>> 
멘델
[가입] pw 를 입력하세요 >>> 
1111
멘델님 가입을 환영합니다.
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
1
[가입] id 를 입력하세요 >>> 
오펜하이머
[가입] pw 를 입력하세요 >>> 
2222
오펜하이머님 가입을 환영합니다.
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
1
[가입] id 를 입력하세요 >>> 
슈바르츠
[가입] pw 를 입력하세요 >>> 
3333
슈바르츠님 가입을 환영합니다.
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
1
[가입] id 를 입력하세요 >>> 
마크주커버그
[가입] pw 를 입력하세요 >>> 
4444
마크주커버그님 가입을 환영합니다.
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
2
이름 : 멘델 비밀번호 : 1111
이름 : 오펜하이머 비밀번호 : 2222
이름 : 슈바르츠 비밀번호 : 3333
이름 : 마크주커버그 비밀번호 : 4444
[탈퇴] id 를 입력하세요 >>> 
멘델
멘델님 탈퇴 되었습니다.
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
3
이름 : 마크주커버그 비밀번호 : 4444
이름 : 슈바르츠 비밀번호 : 3333
이름 : 오펜하이머 비밀번호 : 2222
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
4
이름 : 마크주커버그 비밀번호 : 4444
이름 : 슈바르츠 비밀번호 : 3333
이름 : 오펜하이머 비밀번호 : 2222
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
5
3
마크주커버그,4444
슈바르츠,3333
오펜하이머,2222
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
6
이름 : 마크주커버그 비밀번호 : 4444
이름 : 슈바르츠 비밀번호 : 3333
이름 : 오펜하이머 비밀번호 : 2222
1.가입 2.탈퇴 3.정렬 4.출력 5.저장 6.로드 7.종료
7
종료
